<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    x:Class="GaleryApp.Gel">

    <Style TargetType="ListBox">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Grid></Grid>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        
        <Setter Property="Template">
            <Setter.Value>
                
                <ControlTemplate TargetType="ListBox" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib">
                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="1,1,1,1" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Bd" SnapsToDevicePixels="True">
                        <Border.RenderTransform>
                            <RotateTransform Angle="{Binding Path=Angle}" CenterX="45" CenterY="5" />
                        </Border.RenderTransform>
                        
                        <ItemsPresenter Grid.Column="0" Grid.Row="0" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="UIElement.IsEnabled">
                            <Setter Property="Panel.Background" TargetName="Bd">
                                <Setter.Value>
                                    <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderBrush" TargetName="Bd">
                                <Setter.Value>
                                    <SolidColorBrush>#FFD9D9D9</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <s:Boolean>False</s:Boolean>
                            </Trigger.Value>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ItemsControl.IsGrouping">
                                    <Condition.Value>
                                        <s:Boolean>True</s:Boolean>
                                    </Condition.Value>
                                </Condition>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping">
                                    <Condition.Value>
                                        <s:Boolean>False</s:Boolean>
                                    </Condition.Value>
                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll">
                                <Setter.Value>
                                    <s:Boolean>False</s:Boolean>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

   <Style TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="White" Background="#55ffffff" Name="border" SnapsToDevicePixels="True">
                        <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="contentPresenter" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Focusable="False" />
                    </Border>
                   
                </ControlTemplate>
            </Setter.Value>
        </Setter>
   </Style>
    
    <Style TargetType="ListBoxItem">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                    <Border Height="205" Width="310"  Background="#eeffffff" BorderBrush="Black" BorderThickness="1" Padding="2,2,2,2" Name="Bd" SnapsToDevicePixels="True">
                        
                        <Border.RenderTransform>
                            <RotateTransform Angle="{Binding Path=Angle}" CenterX="300" CenterY="205" />
                        </Border.RenderTransform>
                        <Canvas>
                            
                            <Image Canvas.Top="0" Canvas.Left="0" Name="img" Height="175" Width="304" Source="{Binding Path=Source}">
                            </Image>
                            <Button 
                                     Foreground="White"
                                     Canvas.Top="5" Canvas.Right="5"
                                     Name="close"  Visibility="Collapsed"
                                     Width="30">X</Button>
                            <TextBlock Canvas.Bottom="5" Canvas.Left="0" 
                                       FontWeight="Bold" Name="Title" 
                                       Margin="5,5,0,0" Text="{Binding Path=Title}"></TextBlock>
                        </Canvas>
                         </Border>
                    

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Mouse.MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="Title" Storyboard.TargetProperty="Margin" >
                                        <ThicknessAnimation Duration="0:0:0.2"
                                                 To="10,5,0,0">
                                        </ThicknessAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Mouse.MouseLeave">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="Title" Storyboard.TargetProperty="Margin" >
                                        <ThicknessAnimation Duration="0:0:0.2"
                                                 To="5,5,0,0">
                                        </ThicknessAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Selected">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                       
                                        <DoubleAnimation
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                            To="0" Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="Height"
                                            To="303" Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="Width"
                                            To="480" Duration="0:0:0.2"/>

                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="Height"
                                            To="270" Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="Width"
                                            To="474" Duration="0:0:0.2"/>

                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Unselected">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="Height"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="Width"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="Height"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="Width"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.Click">
                            <EventTrigger.Actions>
                                
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="Height"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="Width"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="Height"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="Width"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>

                        
                        <MultiTrigger>
                            <!--<MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsMouseOver">
                                    <Condition.Value>
                                        <s:Boolean>True</s:Boolean>
                                    </Condition.Value>
                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Title" Property="Margin" Value="10,5,0,0">
                            </Setter>-->
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                               
                                <Condition Property="Selector.IsSelected">
                                    <Condition.Value>
                                        <s:Boolean>True</s:Boolean>
                                    </Condition.Value>
                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="close"></Setter>
                            <Setter Property="Border.BorderBrush" TargetName="Bd">
                                <Setter.Value>
                                    <SolidColorBrush>#FFDADADA</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Panel.Visibility" Value="Visible"></Setter>
                            <Setter Property="Panel.ZIndex" Value="999"></Setter>
                           
                        </MultiTrigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                             
                                <Condition Property="Selector.IsSelected">
                                    <Condition.Value>
                                        <s:Boolean>False</s:Boolean>
                                    </Condition.Value>
                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="{Binding Path=Angle}"></Setter>
                           
                            <Setter Property="Visibility" Value="Hidden" TargetName="close"></Setter>

                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled">
                            <Setter Property="TextElement.Foreground" TargetName="Bd">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <s:Boolean>False</s:Boolean>
                            </Trigger.Value>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>


